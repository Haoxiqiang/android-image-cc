apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 31
    defaultConfig {
        minSdk 21
        targetSdk 31
        externalNativeBuild {
            cmake {
                arguments "-DANDROID_ARM_NEON=ON", "-DANDROID_TOOLCHAIN=clang"
                cFlags "-D__STDC_FORMAT_MACROS"
                abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
                cppFlags "-Wall -fsanitize=address -fexceptions -frtti -ffunction-sections -fdata-sections -funwind-tables -fasynchronous-unwind-tables"
            }
        }
        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            consumerProguardFiles "consumer-rules.pro"
        }
    }

    externalNativeBuild {
        cmake {
            path file("src/main/cpp/CMakeLists.txt")
            version "3.10.2"
        }
    }

    testOptions {
        unitTests.includeAndroidResources = true
    }

    sourceSets {
        androidTest.setRoot("src/androidTest")
        main {
            assets.srcDirs = [rootProject.file("images/assets")]
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
        freeCompilerArgs += '-Xjvm-default=compatibility'
    }
}

dependencies {
    androidTestImplementation("androidx.test:core:1.4.0")
    androidTestImplementation("androidx.test:runner:1.4.0")
    androidTestImplementation("androidx.test:rules:1.4.0")
    androidTestImplementation("androidx.test.ext:junit:1.1.3")
    androidTestImplementation("androidx.test.ext:truth:1.4.0")
    androidTestImplementation("com.google.truth:truth:1.1.3")
    androidTestImplementation("androidx.multidex:multidex:2.0.1")

    implementation("androidx.annotation:annotation:1.3.0")
    api("androidx.exifinterface:exifinterface:1.3.3")
}
